[project]
name = "brand-name-gen"
version = "0.1.0"
description = "Generate unique, memorable brand names with simple heuristics and CLI."
readme = "README.md"
requires-python = ">= 3.11"
authors = [{name = "igamenovoer", email = "igamenovoer@gmail.com"}]
license = {file = "LICENSE"}
keywords = ["branding", "names", "generator", "marketing", "cli"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Utilities",
  "Operating System :: OS Independent",
]
dependencies = ["tavily-python>=0.7.12,<0.8", "pydantic>=2.11.9,<3", "attrs>=25.3.0,<26", "requests>=2.32.5,<3", "idna>=3.10,<4", "httpx>=0.28.1,<0.29", "cachetools>=6.2.0,<7", "mkdocs-material>=9.6.21,<10", "click>=8.3.0,<9", "ruamel-yaml>=0.18.15,<0.19", "dataforseo-client>=2.0.10,<3", "rapidfuzz>=3.14.1,<4"]

[project.urls]
Homepage = "https://github.com/igamenovoer/brand-name-gen"
Repository = "https://github.com/igamenovoer/brand-name-gen"
Issues = "https://github.com/igamenovoer/brand-name-gen/issues"

[project.scripts]
brand-name-gen-cli = "brand_name_gen.cli:cli"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.build.targets.wheel]
packages = ["src/brand_name_gen"]

[tool.pixi.workspace]
channels = ["conda-forge", "main"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[tool.pixi.pypi-dependencies]
brand_name_gen = { path = ".", editable = true }
pytest = ">=7.4"
pytest-cov = ">=4.1"
ruff = ">=0.5"
mypy = ">=1.10"
types-requests = ">=2.32"
types-click = ">=7.1"
build = ">=1.2"
mkdocs = ">=1.6"
twine = ">=5.1"

[tool.pixi.tasks]
test = "pytest -q"
test-cov = "pytest --cov=src/brand_name_gen --cov-report=term-missing"
lint = "ruff check src/ tests/"
format = "ruff format src/ tests/"
typecheck = "mypy src/"
build = "python -m build"
docs-serve = "mkdocs serve -a 0.0.0.0:8000"
docs-build = "mkdocs build"
docs-deploy = "mkdocs gh-deploy --force"
quality = "pixi run lint && pixi run typecheck && pixi run test"
check-android-appfollow = "brand-name-gen-cli check-android appfollow"
check-android-playstore = "brand-name-gen-cli check-android playstore"
check-search-engine-dataforseo = "brand-name-gen-cli check-search-engine dataforseo"
sdk-dataforseo-example = "python -c 'from brand_name_gen.search.dataforseo.google_rank import DataForSEORanker; from brand_name_gen.search.dataforseo.types import GoogleRankQuery; print(DataForSEORanker.from_env().run(GoogleRankQuery(keyword=\"hb-app\")).top_position)'"
demo-check-unique-simple = "python scripts/demo_check_unique_simple.py"
demo-check-unique-advanced = "python scripts/demo_check_unique_advanced.py"

[tool.pixi.environments]
default = {features = [], solve-group = "default"}
dev = {features = [], solve-group = "default"}

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-q"

[tool.mypy]
python_version = "3.11"
strict = false
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true

[dependency-groups]
dev = ["mypy", "ruff"]
